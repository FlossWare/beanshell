/**
 * BUnit - JUnit ala beanshell...
 */
BUnit() {
    fileUtils = FileUtils();

    /**
     * Return all test files found in dir.
     *
     * @param dir is the directory containing test files.
     */
    File[] findAllTestFiles(File dir) {
        return fileUtils.findByExtension(dir, "Test.bsh");
    }

    /**
     * Return all test files found in dir.
     *
     * @param dir is the directory containing test files.
     */
    File[] findAllTestFiles(String dir) {
        return findAllTestFiles(new File(dir));
    }

    /**
     * Run all tests found in testDir using the source found in srcDir.
     *
     * @param srcDir is the directory containing source files.
     * @param testDir is the directory containing test files.
     */
    void runTests(String srcDir, String testDir) {
        addClassPath(srcDir);
        addClassPath(testDir);

        importCommands(".");

        print("Getting all test files...");

        File[] testFiles = findAllTestFiles(testDir);

        for (File tf : testFiles) {
            print("    " + tf);
        }

        for (File testFile : testFiles) {
            print("Attempting to get class:  [" + fileUtils.computeBaseName(testFile) + "]");

            eval("toTest=" + fileUtils.computeBaseName(testFile) + "()");

            print("Iterating over methods...");

            for (String method : toTest.methods) {
                print("    Examining method [" + method + "]");    

                if (method.startsWith("test")) {
                    /*
                    bshMethod = toTest.getMethod(method, new Class[0]);
                    bshMethod.invoke(new Object[0]);
                    */

                    print("        Executing...");

                    bshMethod = toTest.namespace.getMethod(method, new Class[0]);
                    print(bshMethod.getThrowsType());

                    print(toTest.namespace); //.getMethod(method);

                    /**
                    for (String sm : bshm.namespace.getMethods()) {
                        print ("       [" + sm + "]");
                    }
                    */

                    try {
                        toTest.invokeMethod(method,  new Class[0]);
                    } catch(Exception e) {
                        String str = e.toString();
                        print("        " + str.split("\\n")[0]);
                    }
                }
            }
        }
    }

    /**
     * Run all tests found in testDir using the source found in srcDir.
     *
     * @param srcDir is the directory containing source files.
     * @param testDir is the directory containing test files.
     */
     /*
    void runTests(String srcDir, String testDir) {
        runTests(new File(srcDir), new File(testDir));
    }
    */

        /*
        for (URL str : getClassPath()) {
            System.out.println("Class path = " + str);
        }

        stringUtils = StringUtils();

        for (String m : stringUtils.methods) {
            System.out.println(m);
        }
    }
    */

    return this;
}